direnv_version 2.32.3

## Handle python version (using pyenv)
layout_pyprojenv() {
  local py_version=${1:-3.11}
  local py_envname=${2:-mypy}

  if [ -z "$(which pyenv 2>/dev/null)" ]; then
    echo "Unable to find 'pyenv' command. Please check the installation or PATH"
    return
  fi

  local req_env="${py_envname}-${py_version}"

  if [ -z "$(pyenv virtualenvs | grep -v grep | grep -E "\b${req_env}\b")" ]; then
    rm -f .python-version
    pyenv virtualenv --quiet ${py_version} ${req_env} >/dev/null 2>&1
  fi

  if [ ! -e .python-version ] || [ -z "$(cat .python-version | grep -v grep | grep -E "\b${req_env}\b")" ]; then
    echo $req_env >.python-version
  fi
}

## Handle nodejs version
use_nodejs() {
  local udk_version=${1:-lts}
  local udk_basedir="$UDKIT_BASE/sdk/nodejs"

  local prog_dir="$udk_basedir/$udk_version"
  local sys_prog="$(which npm 2>/dev/null)"

  if [ -d "$prog_dir" ]; then
    load_prefix $prog_dir
    layout node
  elif [ -n "$sys_prog" ]; then
    layout node
  fi
}

## Handle golang version
use_golang() {
  local udk_version=${1:-1.20}
  local udk_basedir="$UDKIT_BASE/sdk/golang"

  local prog_dir="$udk_basedir/$udk_version"
  local sys_prog="$(which go 2>/dev/null)"

  if [ -d "$prog_dir" ]; then
    load_prefix $prog_dir
    export GOROOT=$prog_dir
  elif [ -n "$sys_prog" ]; then
    export GOROOT=$(dirname $(dirname $syslog))
  fi
}

## Handle openjdk version
use_openjdk() {
  local udk_version=${1:-17}
  local udk_basedir="$UDKIT_BASE/sdk/openjdk"

  local prog_dir="$udk_basedir/$udk_version"
  local sys_jvm="$(test -e /etc/alternatives/java && ls -l /etc/alternatives/java | awk {'print $11'} | sed -e 's|/bin/java||' 2>/dev/null)"

  if [ -d "$prog_dir" ]; then
    load_prefix $prog_dir
    unset JAVA_VERSION
    export JAVA_HOME=$prog_dir
  elif [ -n "$sys_jvm" ]; then
    load_prefix $sys_jvm
    unset JAVA_VERSION
    export JAVA_HOME=$sys_jvm
  fi
}

## Handle gradle version
use_gradle() {
  local udk_version=${1:-8.2}
  local udk_basedir="$UDKIT_BASE/util/gradle"

  local prog_dir="$udk_basedir/$udk_version"
  local sys_prog="$(which gradle 2>/dev/null)"

  if [ -d "$prog_dir" ]; then
    load_prefix $prog_dir
    export GRADLE_HOME=$prog_dir
  elif [ -n "$sys_prog" ]; then
    export GRADLE_HOME=$(dirname $(dirname $sys_prog))
  fi
}

## Handle maven version
use_maven() {
  local udk_version=${1:-3.9}
  local udk_basedir="$UDKIT_BASE/util/maven"

  local prog_dir="$udk_basedir/$udk_version"
  local sys_prog="$(which mvn 2>/dev/null)"

  if [ -d "$prog_dir" ]; then
    load_prefix $prog_dir
    export M2_HOME=$prog_dir
  elif [ -n "$sys_prog" ]; then
    export M2_HOME=$(dirname $(dirname $sys_prog))
  fi
}
